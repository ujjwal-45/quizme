
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider        = "prisma-client-js"
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text()
  access_token       String?  @db.Text()
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text()
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  game          Game[]
}

enum GameType{
  mcq
  open_ended
}

model Game {
  id            String  @id @default(cuid())
  userId        String @unique
  timeStarted   DateTime
  topic         String
  timeEnded     DateTime?
  gameType      GameType
  user           User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  Question      Question[]
  @@index([userId])
}

model Question{
  id               String  @id @default(cuid())
  question         String
  answer           String
  gameId           String
  options            Json? // for mcq questions
  percentageCorrect    Float? //for open_ended questions
  isCorrect          Boolean?
  questionType       GameType
  userAnswer          String?

  game           Game @relation(fields: [gameId], references: [id], onDelete: Cascade)

  @@index([gameId])
}